{
    "maxerr"        : 50,       // {int} Maximum error before stopping
    "esversion"     : 6,        // Use ES6

    // Enforcing
    "bitwise"       : true,     // true: Prohibit bitwise operators (&, |, ^, etc.)
    "camelcase"     : true,     // true: Identifiers must be in camelCase
    "curly"         : true,     // true: Require {} for every new block or scope
    "eqeqeq"        : true,     // true: Require triple equals (===) for comparison
    "forin"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()
    "freeze"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
    "immed"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
    "latedef"       : false,    // true: Require variables/functions to be defined before being used
    "newcap"        : true,     // true: Require capitalization of all constructor functions e.g. `new F()`
    "noarg"         : true,     // true: Prohibit use of `arguments.caller` and `arguments.callee`
    "noempty"       : true,     // true: Prohibit use of empty blocks
    "nonbsp"        : true,     // true: Prohibit "non-breaking whitespace" characters.
    "nonew"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)
    "plusplus"      : false,    // true: Prohibit use of `++` and `--`
    "quotmark"      : "single", // Quotation mark consistency:
                                //   false    : do nothing (default)
                                //   true     : ensure whatever is used is consistent
                                //   "single" : require single quotes
                                //   "double" : require double quotes
    "undef"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)
    "unused"        : true,     // Unused variables:
                                //   true     : all variables, last function parameter
                                //   "vars"   : all variables only
                                //   "strict" : all variables, all function parameters
    "strict"        : true,     // true: Requires all functions run in ES5 Strict Mode
    "maxparams"     : false,    // {int} Max number of formal params allowed per function
    "maxdepth"      : false,    // {int} Max depth of nested blocks (within functions)
    "maxstatements" : false,    // {int} Max number statements per function
    "maxcomplexity" : false,    // {int} Max cyclomatic complexity per function
    "maxlen"        : false,    // {int} Max number of characters per line
    "varstmt"       : true,     // true: Disallow any var statements. Only `let` and `const` are allowed.

    "node"          : true,     // We are using nodes
    "white"         : false,    // true: Check against strict whitespace and indentation rules

    // Custom globals, from http://docs.meteor.com, in the order they appear there
    "globals"       : {
      "Meteor": false,
      "DDP": false,
      "Mongo": false, // Meteor.Collection renamed to Mongo.Collection
      "Session": false,
      "Accounts": false,
      "Template": false,
      "Blaze": false,  // UI is being renamed Blaze
      "UI": false,
      "Match": false,
      "check": false,
      "Tracker": false, // Deps renamed to Tracker
      "Deps": false,
      "ReactiveVar": false,
      "EJSON": false,
      "HTTP": false,
      "Email": false,
      "Assets": false,
      "Handlebars": false,      // https://github.com/meteor/meteor/wiki/Handlebars
      "Package": false,
      "App": false, // mobile-config.js
      // Meteor internals
      "DDPServer": false,
      "global": false,
      "Log": false,
      "MongoInternals": false,
      "process": false,
      "WebApp": false,
      "WebAppInternals": false,
      // globals useful when creating Meteor packages
      "Npm": false,
      "Tinytest": false,
      // common Meteor packages
      "Random": false,
      //"_": false,               // Underscore.js
      "$": false,               // jQuery
      "Router": false           // iron-router
    }
}
